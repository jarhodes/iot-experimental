{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["urlRoot","App","React","useState","degrees","setDegrees","postDegrees","value","formData","FormData","append","fetch","method","body","then","response","ok","Error","catch","error","console","useEffect","json","data","Container","Paper","elevation","p","Typography","variant","id","Slider","onChange","_","newValue","min","max","valueLabelDisplay","aria-labelledby","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAKMA,EAAU,wBAoDDC,MAlDf,WAEI,MAA8BC,IAAMC,SAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAOMC,EAAc,SAACC,GACjB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWH,GAC3BI,MAAMX,EAAU,kBAAmB,CAC/BY,OAAQ,OACRC,KAAML,IAETM,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,8BAGvBC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAclC,OAJAjB,IAAMmB,WAAW,WANbV,MAAMX,EAAU,iBACfc,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GAAI,OAAIlB,EAAWkB,EAAKnB,YAC7Bc,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAK/B,IAGC,cAACK,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,EAAG,EAAxB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAGA,cAACD,EAAA,EAAD,CAAYE,GAAG,eAAeD,QAAQ,QAAtC,mBAGA,cAACE,EAAA,EAAD,CAAQxB,MAAOH,EAAS4B,SAxCR,SAACC,EAAGC,GAC5B7B,EAAW6B,GACX5B,EAAY4B,IAsCmDC,IAAK,EAAGC,IAAK,IAAKC,kBAAkB,OAAOC,kBAAgB,uBCvCnHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6abb9d2.chunk.js","sourcesContent":["import React from \"react\"\nimport { Container, Paper, Slider, Typography } from \"@material-ui/core\"\nimport { spacing } from \"@material-ui/system\"\nimport \"fontsource-roboto\"\n\nconst urlRoot = \"http://rhodes.fi/iot/\"\n\nfunction App() {\n\n    const [degrees, setDegrees] = React.useState(0)\n\n    const handleDegreesChange = (_, newValue) => {\n        setDegrees(newValue)\n        postDegrees(newValue)\n    }\n\n    const postDegrees = (value) => {\n        const formData = new FormData()\n        formData.append(\"degrees\", value)\n        fetch(urlRoot + \"postDegrees.php\", {\n            method: \"POST\",\n            body: formData\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(\"Network response not OK\")\n            }\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getDegrees = () => {\n        fetch(urlRoot + \"getLatest.php\")\n        .then(response => response.json())\n        .then(data => setDegrees(data.degrees))\n        .catch(error => console.error(error))\n    }\n\n    React.useEffect( () => {\n        getDegrees()\n    }, [])\n\n    return (\n        <Container>\n            <Paper elevation={3} p={2}>\n                <Typography variant=\"h1\">\n                    Servo controller\n                </Typography>\n                <Typography id=\"speed-slider\" variant=\"body1\">\n                    Speed\n                </Typography>\n                <Slider value={degrees} onChange={handleDegreesChange} min={0} max={180} valueLabelDisplay=\"auto\" aria-labelledby=\"speed-slider\" />\n            </Paper>\n        </Container>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}